#############################################################################
#  config for loading box-pushing simulation : config for heading control   #
#############################################################################
### GLOBAL PARAMS
output_dir: "logs/" # 'output/trial0'

plot:
  y_axis_limit: 18  # limits the y-axis of the plot
  show: false       # true will show planner plots

teleop_mode: false     # when using teleoperation mode, control both forward and angular speed

# parameters for low-dim environment
low_dim_state: false
fixed_trial_idx: 1

### SIMULATION PARAMS
render:
  log_obs: false        # whether to log occupancy observation
  show: true            # if true show animation plots
  show_obs: false       # if true show occupancy observation
  frequency: 20         # frequency of rendering
sim:
  t_max: 2000  # max number of iterations in simulation loop (originally 5000)
  steps: 100    # number of simulation steps per iteration (originally 10)
  gravity: !!python/tuple
    - 0
    - 0
  iterations: 10  # controls accuracy of pymunk solver i.e. simulation accuracy, default is 10
  damping: 0      # damping to body velocities
anim:
  save: true               # if true save to disk animation plots
  show: true                # if true show animation plots
  plot_steps: 50            # steps between plot updates
  plan_steps: 10            # steps between obstacle and planner updates
  inf_stream: false         # if true then infinite obstacle stream mode is enabled
  move_yaxis_threshold: 10  # distance traveled before y-axis moves

### CONTROLLER PARAMS
controller:
  dt: 0.2  # the agent dynamics model was discretized with this dt (originally 0.02)
  # target speed
  target_speed: 0.3  # m/s

  # States: [r, u, v] : yaw rate (deg/s), surge velocity (m/s), sway velocity (m/s)
  A:
    - [ 0., 0., 0. ]
    - [ 0., 0., 0. ]
    - [ 0., 0., 0. ]
  # Input matrix: differential fore/aft (rps), side tunnel (rps), main prop (rps) (Assume pure motions)
  B: [ 0., 0., 0. ]
  # Input limits
  # To calculate yaw rate given min turn radius r and surge velocity v
  # 360 / ((2 pi r) / v)
  input_lims: [0., 0., 0.]
  # look ahead distance
  Lfc: 0.
  PID_gains:  # gains for 3 PIDs
    - [ 0, 0, 0 ]
    - [ 0, 0, 0 ]
    - [ 0, 0, 0 ]

cubes:
  randomize_cubes: true
  num_cubes: 10
  cube_size: 0.44
  min_cube_dist: 0.62       # minimum cube distance during random initialization
  max_cube_x: 4
  min_cube_x: -4
  max_cube_y: 2
  min_cube_y: -2
  cube_density: 0.001

agent:
  action_type: 'heading' # options are velocity, heading, position
  step_size: 1.25 # distance travelled per step in heading control
  random_start: true
  mass: 1  # mass of the NRC ship in kg
  padding: 0.25  # adds padding to ship footprint
  length: 0.8
  width: 0.7
  vertices: [
              [0.4, -0.35],
              [0.4, 0.35],
              [-0.4, 0.25],
              [-0.4, -0.25]
              ]
  wheel_vertices: [
    # left
    [
        [-0.4, 0.2],
        [-0.4, 0.3],
        [-0.15, 0.3], 
        [-0.15, 0.2]
    ],

    # right
    [
        [-0.4, -0.2],
        [-0.4, -0.3],
        [-0.15, -0.3], 
        [-0.15, -0.2]
    ],
  ]

### ENVIRONMENT PARAMS
env:
  obstacle_config: small_empty # options are small_empty, small_columns, large_columns, large_divider
  room_length: 10
  room_width: 5 # 5 for small, 10 for large
  receptacle_width: 1.5
  shortest_path_channel_scale: 0.25
  local_map_pixel_width: 224
  local_map_width: 10 # 10 meters
  wall_thickness: 14
  invert_receptacle_map: true

misc:
  ministep_size: 2.5
  inactivity_cutoff: 100
  random_seed: 42

rewards:
  partial_rewards_scale: 0.2
  goal_reward: 5.0
  collision_penalty: 0.25
  non_movement_penalty: 0.25
  correct_direction_reward_scale: 2

train:
  train_mode: false
  job_type: sac
  job_name: ss25_cdr2
  batch_size: 64
  checkpoint_freq: 1000
  job_id_to_resume: ss25_15025678_50000_steps
  learning_starts: 1000
  n_epochs: 10
  n_steps: 128
  resume_training: true
  use_correct_direction_reward: true
  verbose: 2

evaluate:
  eval_mode: true
  num_eps: 2
  models: [
    'fingers_crossed_15049270_60000_steps',
  ]
